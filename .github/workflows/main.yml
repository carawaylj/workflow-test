name: Build and test


on: 
  push:
    branches: [main]
  issue_comment:
    types: [created, edited]
permissions:
  pull-requests: write
  issues: write
jobs:
  ubuntu:
    name: Build and test AMD64 Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-latest
    if: "(github.event_name == 'push' ||  (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/rerun-unit')))"
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get All Organization Member
        if: "github.event_name == 'issue_comment'"
        shell: bash
        run: |
           pwd
           ls -lah
           echo "all members are $(cat members.csv)"
           echo "current is ${{ github.event.issue.user.login }}"
      - name: curl member record file
        run: |
          curl -H "Authorization: token ${{ secrets.GET_ORG_MEMBERS }}" \
          "https://raw.githubusercontent.com/modernapsninja/admin-private/main/userdata/members/${{ github.event.sender.login }}_${{ github.event.sender.id }}.json" \
          -o /tmp/raw_member_record_curl.json && cat /tmp/raw_member_record_curl.json
      - name: check if member record exists
        run: |
          cat /tmp/raw_member_record_curl.json
      - name: Is Organization Member
        uses: JamesSingleton/is-organization-member@1.0.0
        id: is_organization_member
        if: "github.event_name == 'issue_comment'"
        with:
          organization: jingli-jenny
          username: ${{ github.event.issue.user.login }}
          token: ${{ secrets.GET_ORG_MEMBERS }}
      # - name: Create Comment
      #   if: |
      #     steps.is_organization_member.outputs.result == false
      #   run: echo User Does Not Belong to jingli-jenny
      # - name: Get Job URL
      #   if: "github.event_name == 'issue_comment'"
      #   id: get_job_url
      #   shell: bash
      #   run:  |        
      #     echo "::set-output name=job-url::'$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID'"
      # - name: Create reply comment on PR
      #   uses: actions/github-script@v5.0.0 
      #   if: "github.event_name == 'issue_comment'"
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #     JOB_URL: ${{ steps.get_job_url.outputs.job-url }}
      #   with:
      #     script: |
      #       const {JOB_URL} = process.env
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `${JOB_URL}`
      #       })

        
